-- Create Users table
CREATE TABLE IF NOT EXISTS Users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    role VARCHAR(20) NOT NULL
);

-- Create Instructors table
CREATE TABLE IF NOT EXISTS Instructors (
    instructor_id INT PRIMARY KEY,
    user_id INT,
    expertise VARCHAR(100),
    bio TEXT,
    FOREIGN KEY (user_id) REFERENCES Users(user_id)
);

-- Create Students table
CREATE TABLE IF NOT EXISTS Students (
    student_id INT PRIMARY KEY,
    user_id INT,
    enrollment_date DATE,
    FOREIGN KEY (user_id) REFERENCES Users(user_id)
);

-- Create Courses table
CREATE TABLE IF NOT EXISTS Courses (
    course_id INT PRIMARY KEY,
    course_name VARCHAR(100),
    description TEXT,
    start_date DATE,
    end_date DATE
);

-- Create Enrollments table
CREATE TABLE IF NOT EXISTS Enrollments (
    enrollment_id INT PRIMARY KEY,
    student_id INT,
    course_id INT,
    enrollment_date DATE,
    completion_status VARCHAR(20),
    FOREIGN KEY (student_id) REFERENCES Students(student_id),
    FOREIGN KEY (course_id) REFERENCES Courses(course_id)
);

-- Create Lessons table
CREATE TABLE IF NOT EXISTS Lessons (
    lesson_id INT PRIMARY KEY,
    course_id INT,
    title VARCHAR(100),
    content TEXT,
    duration INT,
    FOREIGN KEY (course_id) REFERENCES Courses(course_id)
);

-- Create Assignments table
CREATE TABLE IF NOT EXISTS Assignments (
    assignment_id INT PRIMARY KEY,
    lesson_id INT,
    title VARCHAR(100),
    description TEXT,
    due_date DATE,
    FOREIGN KEY (lesson_id) REFERENCES Lessons(lesson_id)
);

-- Create Submissions table
CREATE TABLE IF NOT EXISTS Submissions (
    submission_id INT PRIMARY KEY,
    assignment_id INT,
    student_id INT,
    submission_date DATE,
    grade VARCHAR(10),
    FOREIGN KEY (assignment_id) REFERENCES Assignments(assignment_id),
    FOREIGN KEY (student_id) REFERENCES Students(student_id)
);